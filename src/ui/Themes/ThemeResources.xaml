<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Light Theme -->
    <ResourceDictionary x:Key="LightTheme">
        <SolidColorBrush x:Key="BackgroundBrush"
                         Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ForegroundBrush"
                         Color="#000000"/>
        <SolidColorBrush x:Key="BorderBrush"
                         Color="#CCCCCC"/>
        <SolidColorBrush x:Key="ControlBackgroundBrush"
                         Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ControlForegroundBrush"
                         Color="#000000"/>
        <SolidColorBrush x:Key="AccentBrush"
                         Color="#0078D7"/>
        <SolidColorBrush x:Key="HeaderBackgroundBrush"
                         Color="#E5E5E5"/>
        <SolidColorBrush x:Key="HeaderForegroundBrush"
                         Color="#333333"/>
        <SolidColorBrush x:Key="HoverBrush"
                         Color="#E5F1FB"/>
        <SolidColorBrush x:Key="SelectedBrush"
                         Color="#CCE4F7"/>
    </ResourceDictionary>

    <!-- Dark Theme -->
    <ResourceDictionary x:Key="DarkTheme">
        <SolidColorBrush x:Key="BackgroundBrush"
                         Color="#252525"/>
        <SolidColorBrush x:Key="ForegroundBrush"
                         Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BorderBrush"
                         Color="#555555"/>
        <SolidColorBrush x:Key="ControlBackgroundBrush"
                         Color="#333333"/>
        <SolidColorBrush x:Key="ControlForegroundBrush"
                         Color="#FFFFFF"/>
        <SolidColorBrush x:Key="AccentBrush"
                         Color="#0078D7"/>
        <SolidColorBrush x:Key="HeaderBackgroundBrush"
                         Color="#3A3A3A"/>
        <SolidColorBrush x:Key="HeaderForegroundBrush"
                         Color="#EEEEEE"/>
        <SolidColorBrush x:Key="HoverBrush"
                         Color="#404040"/>
        <SolidColorBrush x:Key="SelectedBrush"
                         Color="#505050"/>
    </ResourceDictionary>

    <!-- Default to Light Theme -->
    <SolidColorBrush x:Key="BackgroundBrush"
                     Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ForegroundBrush"
                     Color="#000000"/>
    <SolidColorBrush x:Key="BorderBrush"
                     Color="#CCCCCC"/>
    <SolidColorBrush x:Key="ControlBackgroundBrush"
                     Color="#F0F0F0"/>
    <SolidColorBrush x:Key="ControlForegroundBrush"
                     Color="#000000"/>
    <SolidColorBrush x:Key="AccentBrush"
                     Color="#0078D7"/>
    <SolidColorBrush x:Key="HeaderBackgroundBrush"
                     Color="#E5E5E5"/>
    <SolidColorBrush x:Key="HeaderForegroundBrush"
                     Color="#333333"/>
    <SolidColorBrush x:Key="HoverBrush"
                     Color="#E5F1FB"/>
    <SolidColorBrush x:Key="SelectedBrush"
                     Color="#CCE4F7"/>

    <!-- Enhanced ComboBox Style that properly supports dark mode -->
    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="ToggleButton">
        <Border x:Name="templateRoot"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{DynamicResource ControlBackgroundBrush}">
            <Border x:Name="splitBorder"
                    BorderThickness="0"
                    HorizontalAlignment="Right"
                    Margin="0"
                    Width="20">
                <Path x:Name="arrow"
                      Data="M0,0L3.5,4 7,0z"
                      Fill="{DynamicResource ControlForegroundBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
            </Border>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="ComboBox">
        <Grid x:Name="templateRoot">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"
                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="Slide"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1"
                        Background="{DynamicResource ControlBackgroundBrush}">
                    <ScrollViewer x:Name="DropDownScrollViewer"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <ItemsPresenter x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="False"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{DynamicResource ControlForegroundBrush}"/>
        <Setter Property="Padding"
                Value="3,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource HoverBrush}"
                                    TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Template with proper hover state handling -->
    <ControlTemplate x:Key="ButtonTemplate"
                     TargetType="Button">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3">
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource HoverBrush}"
                        TargetName="border"/>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource SelectedBrush}"
                        TargetName="border"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TabItem Template with proper hover state handling -->
    <ControlTemplate x:Key="TabItemTemplate"
                     TargetType="TabItem">
        <Grid x:Name="templateRoot">
            <Border x:Name="mainBorder"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1,1,1,0"
                    Background="{TemplateBinding Background}"
                    Margin="0,0,0,-1"
                    CornerRadius="3,3,0,0">
                <ContentPresenter x:Name="contentPresenter"
                                  ContentSource="Header"
                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource HoverBrush}"
                        TargetName="mainBorder"/>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource SelectedBrush}"
                        TargetName="mainBorder"/>
                <Setter Property="Panel.ZIndex"
                        Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ListViewItem Template with proper hover state handling -->
    <ControlTemplate x:Key="ListViewItemTemplate"
                     TargetType="ListViewItem">
        <Border x:Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
            <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource HoverBrush}"
                        TargetName="Bd"/>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource SelectedBrush}"
                        TargetName="Bd"/>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>